{"version":3,"sources":["webpack:///./src/templates/tag-page.js"],"names":["TagPageTemplate","render","props","this","tag","pageContext","posts","data","allMarkdownRemark","edges","siteTitle","site","siteMetadata","title","location","charAt","toUpperCase","slice","keywords","className","totalCount","map","node","key","fields","slug","postClass","React","Component"],"mappings":"4KAOMA,E,kGACJC,OAAA,WACE,IAAMC,EAAQC,KAAKD,MACbE,EAAMD,KAAKD,MAAMG,YAAYD,IAC7BE,EAAQH,KAAKD,MAAMK,KAAKC,kBAAkBC,MAC1CC,EAAYP,KAAKD,MAAMK,KAAKI,KAAKC,aAAaC,MAEpD,OACE,kBAAC,IAAD,CAAQC,SAAUX,KAAKD,MAAMY,SAAUD,MAAOH,GAC5C,kBAAC,IAAD,CAEEG,MAAK,KAAMT,EAAIW,OAAO,GAAGC,cAAgBZ,EAAIa,MAAM,IACnDC,SAAU,CAAC,GAAGd,EAAJ,wCAEZ,4BAAQe,UAAU,iBAChB,wBAAIA,UAAU,mBAAd,IAAkCf,EAAlC,IAAwCF,EAAMK,KAAKC,kBAAkBY,WAArE,MAEJ,yBAAKD,UAAU,aACZb,EAAMe,KAAI,YAAe,IAAZC,EAAW,EAAXA,KACZ,OACE,kBAAC,IAAD,CACEC,IAAKD,EAAKE,OAAOC,KACjBH,KAAMA,EACNI,UAAS,e,GAvBOC,IAAMC,WAiCrB5B","file":"component---src-templates-tag-page-js-ff90e50dfa1f56db879c.js","sourcesContent":["import React from \"react\"\nimport { graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport PostCard from \"../components/postCard\"\n\nclass TagPageTemplate extends React.Component {\n  render() {\n    const props = this.props\n    const tag = this.props.pageContext.tag\n    const posts = this.props.data.allMarkdownRemark.edges\n    const siteTitle = this.props.data.site.siteMetadata.title\n\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <SEO\n          // title={`#${tag}`}\n          title={`#${tag.charAt(0).toUpperCase() + tag.slice(1)}`}\n          keywords={[`${tag}`, `blog`, `gatsby`, `javascript`, `react`]}\n        />\n        <header className=\"tag-page-head\">\n          <h1 className=\"page-head-title\">#{tag}({props.data.allMarkdownRemark.totalCount})</h1>\n        </header>\n      <div className=\"post-feed\">\n        {posts.map(({ node }) => {\n          return (\n            <PostCard\n              key={node.fields.slug}\n              node={node}\n              postClass={`post`}\n            />\n          )\n        })}\n      </div>\n    </Layout>\n    )\n  }\n}\n\nexport default TagPageTemplate\n\nexport const pageQuery = graphql`\n  query PostByTag($tag: String!) {\n    site {\n      siteMetadata {\n        title\n        author\n      }\n    }\n    allMarkdownRemark(filter: { frontmatter: { tags: { in: [$tag] } } }, sort: { fields: [frontmatter___date], order: DESC }) {\n      totalCount\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            description\n            tags\n            thumbnail {\n              childImageSharp {\n                fluid(maxWidth: 1360) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}